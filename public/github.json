{
  "adapterName": "github",
  "label": "Github",
  "description": "Github adapter for adapter development",
  "infoUrl": null,
  "supportUrl": null,
  "maintainer": null,
  "tags": [],
  "version": "0.0.3",
  "name": "github",
  "modified": true,
  "workflow": [
    {
      "workflowId": "myWorkflow",
      "title": "Github Authentication",
      "adapterName": "github",
      "modified": false,
      "config": "configs/myWorkflow.json"
    },
    {
      "adapterName": "github",
      "workflowId": "githubAuth",
      "title": "Github Authentication",
      "modified": true,
      "config": "configs/githubAuth.json"
    },
    {
      "adapterName": "github",
      "workflowId": "githubUser",
      "title": "Github Authentication",
      "modified": true,
      "config": "configs/githubUser.json"
    },
    {
      "adapterName": "github",
      "workflowId": "githubRepoIssues",
      "title": "Github Repository Issues",
      "modified": true,
      "config": "configs/githubRepoIssues.json"
    },
    {
      "adapterName": "github",
      "workflowId": "githubRepoList",
      "title": "Github Repository Issues",
      "modified": true,
      "config": "configs/githubRepoList.json"
    },
    {
      "workflowId": "createCommit",
      "title": "Create commit",
      "adapterName": "github",
      "modified": true,
      "config": "configs/createCommit.json"
    },
    {
      "adapterName": "github",
      "workflowId": "loadGithubUserData",
      "title": "Load github data into state",
      "modified": true,
      "config": "configs/loadGithubUserData.json"
    }
  ],
  "database": [],
  "forms": [],
  "commitMessage": "Fixed the user data store",
  "attachments": {
    "configs/myWorkflow.json": {
      "workflowId": "myWorkflow",
      "title": "Github Authentication",
      "adapterName": "github",
      "blocks": [],
      "modified": false
    },
    "configs/githubAuth.json": {
      "workflowId": "githubAuth",
      "title": "Github Authentication",
      "adapterName": "github",
      "blocks": [
        {
          "type": "init"
        },
        {
          "type": "form",
          "label": "Github Authentication",
          "jsonSchema": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "title": "Personal access token",
                "pattern": "^gh.?_.*"
              }
            }
          },
          "uiSchema": {
            "token": {
              "ui:widget": "password"
            }
          }
        },
        {
          "type": "mapping",
          "mapping": "data.token"
        },
        {
          "type": "debug",
          "open": 1,
          "showContext": false
        },
        {
          "type": "variable-set",
          "name": "github.token"
        }
      ],
      "modified": false
    },
    "configs/githubUser.json": {
      "workflowId": "githubUser",
      "title": "Github Authentication",
      "adapterName": "github",
      "blocks": [
        {
          "type": "init"
        },
        {
          "type": "gosub",
          "adapterName": "github",
          "workflowId": "loadGithubUserData",
          "blockComment": "load github data"
        },
        {
          "type": "switch",
          "valueGetter": "type(state.flags.github.viewer) == `string` && length(state.flags.github.viewer) > `0` && state.flags.github.viewer != `clear`",
          "cases": [
            {
              "value": true,
              "blocks": [
                {
                  "type": "template",
                  "template": "Connected to Github as: {{state.flags.github.viewer}}"
                }
              ]
            },
            {
              "value": false,
              "blocks": [
                {
                  "type": "gosub",
                  "adapterName": "github",
                  "workflowId": "githubAuth"
                }
              ]
            }
          ],
          "blockComment": "Request auth if no data exists"
        }
      ],
      "modified": true
    },
    "configs/githubRepoIssues.json": {
      "workflowId": "githubRepoIssues",
      "title": "Github Repository Issues",
      "adapterName": "github",
      "blocks": [
        {
          "type": "init"
        },
        {
          "type": "mapping",
          "mapping": "context.github.repository"
        },
        {
          "type": "form",
          "label": "github repostitory selector",
          "jsonSchema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "title": "Repository owner",
                "default": "kendraio"
              },
              "repository": {
                "type": "string",
                "title": "Repository name",
                "default": "kendraio-app"
              }
            }
          },
          "uiSchema": {}
        },
        {
          "type": "context-save",
          "contextKey": "github.repository"
        },
        {
          "type": "variable-get",
          "name": "github.token"
        },
        {
          "type": "context-save",
          "contextKey": "github.token"
        },
        {
          "type": "graphql",
          "endpoint": "https://api.github.com/graphql",
          "query": "query MyQuery($owner: String!, $repository: String!) {\r\n    repository(owner: $owner, name: $repository) {\r\n      issues(first: 100, states: [OPEN], orderBy:  {field: UPDATED_AT, direction: DESC}) {\r\n        totalCount\r\n        nodes {\r\n          number\r\n          id\r\n          title\r\n          url\r\n          createdAt\r\n          updatedAt   \r\n          comments(last: 5, orderBy: {field: UPDATED_AT, direction: DESC}) {\r\n            totalCount\r\n          } \r\n        }\r\n      }\r\n    } \r\n  }",
          "variables": {
            "token": "context.authToken",
            "owner": "context.github.repository.owner",
            "repository": "context.github.repository.repository"
          },
          "headers": {
            "Authorization": "join(' ', [`Bearer`, context.github.token])"
          },
          "allowFirst": true,
          "allowEmpty": true
        },
        {
          "type": "debug",
          "open": 1,
          "showContext": true
        },
        {
          "type": "mapping",
          "mapping": "data.data.repository.issues.nodes[].{number: number, title: title, url: url, createdAt: createdAt, updatedAt: updatedAt, comments: comments.totalCount}"
        },
        {
          "type": "grid",
          "gridOptions": {
            "pagination": true,
            "paginationPageSize": 20,
            "defaultColDef": {
              "sortable": true,
              "resizable": true
            }
          }
        }
      ],
      "modified": false
    },
    "configs/githubRepoList.json": {
      "workflowId": "githubRepoList",
      "title": "Github Repository Issues",
      "adapterName": "github",
      "blocks": [
        {
          "type": "init"
        },
        {
          "type": "mapping",
          "mapping": "context.github.repositories"
        },
        {
          "type": "debug",
          "open": 1,
          "showContext": true
        },
        {
          "type": "grid",
          "gridOptions": {
            "pagination": true,
            "paginationPageSize": 20,
            "defaultColDef": {
              "sortable": true,
              "resizable": true
            }
          }
        },
        {
          "type": "form",
          "label": "github repostitory selector",
          "jsonSchema": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "string",
                "title": "Repository owner",
                "default": "kendraio"
              },
              "repository": {
                "type": "string",
                "title": "Repository name",
                "default": "kendraio-app"
              }
            }
          },
          "uiSchema": {}
        },
        {
          "type": "mapping",
          "mapping": "[context.github.repositories || [], [data]][]"
        },
        {
          "type": "debug",
          "open": 1,
          "showContext": true
        },
        {
          "type": "context-save",
          "contextKey": "github.repositories"
        }
      ],
      "modified": false
    },
    "configs/createCommit.json": {
      "workflowId": "createCommit",
      "title": "Create commit",
      "adapterName": "github",
      "blocks": [
        {
          "type": "init"
        },
        {
          "type": "mapping",
          "mapping": "{\r\n    owner:`the-greenman`,\r\n    repository:`kendraio-test`,\r\n    branch:`main`\r\n}",
          "blockComment": "Set up repository data"
        },
        {
          "type": "context-save",
          "key": "github.adapterCommit",
          "blockComment": "save repository for adapters to context"
        },
        {
          "type": "gosub",
          "adapterName": "github",
          "workflowId": "loadGithubUserData",
          "blockComment": "load github data"
        },
        {
          "type": "graphql",
          "endpoint": "https://api.github.com/graphql",
          "query": " \r\nquery MyQuery($owner:String!, $name:String!, $branch:String!){\r\n        repository(owner: $owner, name: $name) {\r\n          ... on Repository{\r\n            ref(qualifiedName: $branch) {\r\n                       target {\r\n                         ... on Commit {\r\n                           oid\r\n                           committedDate\r\n                message\r\n                         }\r\n                       }\r\n                     }      \r\n                }\r\n          }\r\n        }",
          "variables": {
            "owner": "`the-greenman`",
            "name": "`kendraio-test`",
            "branch": "`main`"
          },
          "headers": {
            "Authorization": "join(' ', [`Bearer`, state.flags.github.token])"
          },
          "allowFirst": true,
          "allowEmpty": true
        },
        {
          "type": "debug",
          "open": 1,
          "showData": true,
          "showContext": true,
          "showState": true,
          "blockComment": ""
        },
        {
          "type": "mapping",
          "mapping": "data.data.repository.ref.target",
          "blockComment": "Extract content from result"
        },
        {
          "type": "context-save",
          "key": "github.lastCommit",
          "blockComment": "save last commit data"
        },
        {
          "type": "adapter-info",
          "adapterName": "github",
          "compileAdapter": true,
          "blockComment": "load adapter data"
        },
        {
          "type": "template",
          "template": "<h2>Preparing to commit adapter: {{data.adapterName}}</h2><p>Connected to github as: {{state.flags.github.viewer}}</p><p><strong>Repository: {{context.github.adapterCommit.owner}}/{{context.github.adapterCommit.repository}}/{{context.github.adapterCommit.branch}}</strong></p>",
          "blockComment": "Adapter commit data"
        },
        {
          "type": "form",
          "jsonSchema": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "title": "Adapter label",
                "default": ""
              },
              "description": {
                "type": "string",
                "title": "Description",
                "default": ""
              },
              "version": {
                "type": "string",
                "title": "version",
                "default": "0.0.0"
              },
              "commitMessage": {
                "type": "string",
                "title": "version",
                "default": "Updated via kendraio flow"
              }
            }
          },
          "uiSchema": {},
          "blockComment": ""
        },
        {
          "type": "template",
          "template": "<h3>Workflows</h3><ul>{{#each data.workflow}}<li>{{workflowId}}: {{title}}</li>{{/each}}</ul>",
          "blockComment": "Workflow list"
        },
        {
          "type": "context-save",
          "key": "adapter",
          "blockComment": "Save to context.adapter"
        },
        {
          "type": "mapping",
          "mapping": "btoa(json(data))",
          "blockComment": "base64 encode"
        },
        {
          "type": "context-save",
          "key": "content",
          "blockComment": "Save encoded content"
        },
        {
          "type": "mapping",
          "mapping": "{\r\n  \"input\": {\r\n    \"branch\": {\r\n      \"repositoryNameWithOwner\": join(`/`,[context.github.adapterCommit.owner,context.github.adapterCommit.repository]),\r\n      \"branchName\": context.github.adapterCommit.branch\r\n    },\r\n    \"message\": {\r\n      \"headline\": context.adapter.commitMessage\r\n    },\r\n    \"fileChanges\": {\r\n      \"additions\": [\r\n        {\r\n          \"path\": join(`/`,[`adapters`,context.adapter.adapterName,`kendraio-adapter.json`]),\r\n          \"contents\": context.content\r\n        }\r\n      ]\r\n    },\r\n    \"expectedHeadOid\": context.github.lastCommit.oid\r\n  }\r\n}",
          "blockComment": "Set up input data"
        },
        {
          "type": "debug",
          "open": 1,
          "showData": true,
          "showContext": false,
          "showState": true,
          "blockComment": ""
        },
        {
          "type": "actions",
          "buttons": [
            {
              "label": "Commit to github",
              "color": "primary",
              "blocks": [
                {
                  "type": "graphql",
                  "endpoint": "https://api.github.com/graphql",
                  "query": "mutation MyQuery($input: CreateCommitOnBranchInput!){ createCommitOnBranch(input: $input) { commit { url  } } }",
                  "variables": {
                    "input": "data.input"
                  },
                  "headers": {
                    "Authorization": "join(' ', [`Bearer`, state.flags.github.token])"
                  }
                },
                {
                  "type": "context-save",
                  "key": "state.local.commitResult"
                }
              ],
              "enabled": true
            }
          ],
          "blockComment": ""
        },
        {
          "type": "debug",
          "open": 1,
          "showData": true,
          "showContext": false,
          "showState": true,
          "blockComment": ""
        }
      ],
      "modified": false
    },
    "configs/loadGithubUserData.json": {
      "workflowId": "loadGithubUserData",
      "title": "Load github data into state",
      "adapterName": "github",
      "blocks": [
        {
          "type": "init"
        },
        {
          "type": "variable-get",
          "name": "github.token"
        },
        {
          "type": "context-save",
          "contextKey": "state.flags.github.token",
          "blockComment": ""
        },
        {
          "type": "debug",
          "open": 1,
          "showData": true,
          "showContext": false,
          "showState": true,
          "blockComment": ""
        },
        {
          "type": "graphql",
          "endpoint": "https://api.github.com/graphql",
          "query": "query MyQuery {\r\n    viewer { \r\n        login \r\n        }\r\n}",
          "variables": {},
          "headers": {
            "Authorization": "join(' ', [`Bearer`, state.flags.github.token])"
          },
          "allowFirst": true,
          "allowEmpty": true
        },
        {
          "type": "mapping",
          "mapping": "data.data.viewer.login"
        },
        {
          "type": "context-save",
          "contextKey": "state.flags.github.viewer",
          "blockComment": ""
        }
      ],
      "modified": false
    }
  }
}